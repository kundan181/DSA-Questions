
***Important Problem
Approch - 
Push all the elements into the stack then pop two element from the stack a and b. then compare the a and b in
each other if (a knows b) then a ko discard kardo or b ko stack mai push kardo. if (b knows a) then b ko discrad kardo
and a ko stack mai push kardo simple. Or jo last main bachega uski row(jo ki sari row 0 hongi) and col( sare col mai
1 honge except diagonal wale col mai).

TC = O(n)  n is number elemnt in matrix

class Solution 
{
    private: 
    bool knows(vector<vector<int> >& M,int a, int b, int n)
    {
        if(M[a][b] == 1)
        {
            return true;
        }
        else{
            return false;
        }
    }
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        //step1: push all the elements in stack
        stack<int> s;
        for(int i=0; i<n; i++)
        {
            s.push(i);
        }
        
        //step2: remove two elements from the 
        //stack jab tak stack mai ek elem na rahai
        while(s.size() > 1)
        {
            int a = s.top();
            s.pop();
            int b = s.top();
            s.pop();
            
            if(knows(M,a,b,n)){
                s.push(b);
            }
            else{
                s.push(a);
            }
        }
        int ans = s.top();
        //step3 : single element in stack is potential celeb
        //so verify it
        int zeroCount = 0;
        for(int i=0; i<n; i++)
        {
            if(M[ans][i] == 0){
                zeroCount++;
            }
        }
        //all zeroes
        if(zeroCount != n)
            return -1;
        // column check 
        int oneCount = 0;
        
        for(int i=0; i<n; i++)
        {
            if(M[i][ans] == 1)
            {
                oneCount++;
            }
        }
        if(oneCount != n-1){
                return -1;
        }
        
        return ans;
    }
};



other Solutions-

