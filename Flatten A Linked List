Flatten A Linked List

#include <bits/stdc++.h> 
#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the Node class:

class Node {
public:
	int data;
	Node* next;
	Node* child;

	Node(int data) {
		this->data = data;
		this->next = NULL;
		this->child = NULL;
	}
};

*****************************************************************/

Node* mergeList(Node* first, Node* second)
{
	Node* temp = new Node(-1);
	Node* result = temp;

	//check first and second if there is not null both of them
	if(!first)
		return second;
	if(!second)
		return first;

	
	while(first && second)
	{
		if(first->data < second->data){
			temp->child = first;
			temp = temp->child;
			first = first->child;
		}else{
			temp->child = second;
			temp = temp->child;
			second = second->child;
		}
	}
	if(first){
		temp->child = first;
	}
	else{
		temp->child = second;
	}
	return result->child;
}

Node* flattenLinkedList(Node* head) 
{
	// Write your code here
	if(head == NULL)
		return NULL;

	Node* down = head;
	Node* right = head->next; 
	down->next = NULL;

	right = flattenLinkedList(right);

	Node* ans = mergeList(down,right);

	return ans;

} 
 
